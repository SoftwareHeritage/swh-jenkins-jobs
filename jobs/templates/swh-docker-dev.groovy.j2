def startedByTimer = currentBuild.getBuildCauses('hudson.triggers.TimerTrigger$TimerTriggerCause')
def startedByUser = currentBuild.getBuildCauses('hudson.model.Cause$UserIdCause')
def dockerBuildOpts = '--pull'
if (startedByTimer || startedByUser) {
  dockerBuildOpts += ' --no-cache'
}

pipeline {
  agent {
    label "built-in"
  }

  options {
    timeout(time: 30, unit: 'MINUTES')
    timestamps()
  }

  stages {
    stage('Checkout') {
      steps {
        git url: "{{gitlab_url}}/{{gitlab_project_name}}.git"
      }
    }

    stage('Build Docker images') {
      when {
        anyOf {
          expression {
            return startedByTimer
          }
          expression {
            return startedByUser
          }
          // content of docker directory modified
          changeset "docker/*"
        }
      }
      steps {
        dir('docker') {
          sh "docker build $dockerBuildOpts -t swh/stack ."
        }
      }
    }

    stage('Run tests') {
      when {
        anyOf {
          expression {
            return startedByTimer
          }
          expression {
            return startedByUser
          }
          // content of docker directory modified
          changeset "docker/*"
        }
      }
      steps {
        lock('docker-agent-host-port-5080') {
          dir('docker') {
            sh 'tox -- -v'
          }
        }
      }
    }
  }

  post {
    always {
      archiveArtifacts(
        allowEmptyArchive: true,
        artifacts: 'docker/**/*.logs',
      )
    }
  }
}
