pipeline {
  agent none
  stages {
    stage('Refresh tag list') {
      agent any
      steps
        updateGitlabCommitStatus name: 'jenkins', state: 'running'
        checkout([
          $class: 'GitSCM',
          userRemoteConfigs: [[
            name:'origin', url: '{{gitlab_url}}/{{gitlab_project_name}}.git',
            refspec: '+refs/tags/*:refs/remotes/origin/tags*'
          ]],
          branches: [[
            name: "${env.gitlabSourceBranch}"
          ]],
          browser: [
            $class: 'GitLab',
            repoUrl: '{{gitlab_url}}/{{gitlab_project_name}}'
          ],
          extensions: [[$class: 'CloneOption', honorRefspec: true]],
        ])
      }
    }
    stage('Build Debian package') {
      when {
        expression { "${env.gitlabSourceBranch}" ==~ /refs\/tags\/debian\/.*/ }
        expression { !("${env.gitlabSourceBranch}" ==~ /refs\/tags\/debian\/upstream\/.*/) }
        expression { jenkinsJobExists('/debian/deps/{{name}}/gbp-buildpackage') }
      }
      steps {
        build(
          job: '/debian/deps/{{name}}/gbp-buildpackage',
          parameters: [
            // remove refs/tags/ prefix from source branch
            string(name: 'GIT_REVISION', value: env.gitlabSourceBranch.substring(10)),
            booleanParam(name: 'DO_UPLOAD', value: false),
          ],
          wait: true,
        )
      }
    }
  }
  post {
    {% filter indent(width=4) %}
      {%- include 'includes/update-gitlab-commit-status.groovy.j2' -%}
    {% endfilter %}
  }
}

{% include 'includes/jenkins-job-exists.groovy.j2' %}
