pipeline {
  agent none
  stages {

    stage('Refresh tag list') {
      agent any
      steps {
        updateGitlabCommitStatus name: 'jenkins', state: 'running'
        checkout([
          $class: 'GitSCM',
          userRemoteConfigs: [[
            name:'origin', url: '{{gitlab_url}}/{{gitlab_project_name}}.git',
            refspec: '+refs/tags/*:refs/remotes/origin/tags*'
          ]],
          branches: [[
            name: "${env.gitlabSourceBranch}"
          ]],
          browser: [
            $class: 'GitLab',
            repoUrl: '{{gitlab_url}}/{{gitlab_project_name}}'
          ],
          extensions: [[$class: 'CloneOption', honorRefspec: true]],
        ])
      }
    }

    stage('Build and upload PyPI package') {
      when {
        expression { "${env.gitlabSourceBranch}" ==~ /refs\/tags\/v\d+(:?\.\d+)+(:?(:?a|b|rc)\d+)?/ }
        expression { jenkinsJobExists('/{{name}}/pypi-upload') }
      }
      steps {
        build(
          job: '/{{name}}/pypi-upload',
          parameters: [
            // remove refs/tags/ prefix from source branch
            string(name: 'GIT_TAG', value: env.gitlabSourceBranch.substring(10)),
            string(name: 'PYPI_HOST', value: '{{incoming_tag_auto_pypi_host}}'),
          ],
          wait: true,
        )
      }
    }

    stage('Build Docker Image(s) depending on new release') {
      when {
        // The tag is in the right format
        expression { "${env.gitlabSourceBranch}" ==~ /refs\/tags\/v\d+(:?\.\d+)+(:?(:?a|b|rc)\d+)?/ }
        // Job to build images exist
        expression { jenkinsJobExists('/swh-apps/build-docker-images') }
        // temporarily disabled to avoid churn in coordinated releases
        expression { false }
      }
      steps {
        build(
          job: '/swh-apps/build-docker-images',
          parameters: [
            string(name: 'MODULE', value: '{{python_module}}'),
            // VERSION is the actual tag without 'refs/tags/' prefix
            string(name: 'VERSION', value: env.gitlabSourceBranch.substring(10))
          ],
          // Wait 10 seconds prior to build (so pypi can refresh index)
          quietPeriod: 10,
          // Ignore result the remaining parts of the pipeline
          propagate: false,
          // Do not wait for result for the remaining parts of the pipeline
          wait: false
        )
      }
    }
  }

  post {
    {% filter indent(width=4) %}
      {%- include 'includes/update-gitlab-commit-status.groovy.j2' -%}
    {% endfilter %}
  }
}

{% include 'includes/jenkins-job-exists.groovy.j2' %}
