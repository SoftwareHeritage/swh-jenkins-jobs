{% for stage in ['test', 'clippy', 'doc']%}
stage('cargo {{ stage }}') {
  steps {
    script {
      parallel([
        {% for rust_version in [rust_min_version, 'stable', 'nightly'] %}
          'rust {{ rust_version }}': {
            {% if production_jenkins %}
            withCredentials([
              string(credentialsId: 'sccache-redis-endpoint', variable: 'SCCACHE_REDIS_ENDPOINT'),
              string(credentialsId: 'sccache-redis-password', variable: 'SCCACHE_REDIS_PASSWORD'),
            ]) {
            {% endif %}
            {% if rust_version == 'stable'%}
              // one build must keep the default target directory as Python tests might
              // depend on binaries under that path
              def target_dir="target"
            {% else %}
              def target_dir="target_{{ rust_version }}"
            {% endif %}
            {% if stage == 'clippy' %}
              def cargo_command = "cargo +{{ rust_version }} clippy --target-dir ${target_dir} --all-features --locked -- --deny warnings"
            {% elif stage == 'doc' %}
              def cargo_command = "RUSTDOCFLAGS=\"--deny warnings\" cargo +{{ rust_version }} doc --target-dir ${target_dir} --all-features --locked --no-deps"
            {% else %}
              def cargo_command = "cargo +{{ rust_version }} test --target-dir ${target_dir} --all-features --locked"
            {% endif %}
              sh """\
                set -e
                mkdir -p ${target_dir}
                export RUSTC_WRAPPER=sccache
                export CARGO_INCREMENTAL=0
                ${cargo_command}
                """
            {% if production_jenkins %}
            }
            {% endif %}
          },
        {% endfor %}
      ])
    }
  }
}
{% endfor %}