stage('Rust tests') {
  {% filter indent(width=2) %}
    {%- include 'includes/agent-docker.groovy.j2' -%}
  {% endfilter %}

  steps {
    script {
      sh "prepare-cargo-cache"
      parallel([
        {% for rust_version in [rust_min_version, 'stable', 'nightly'] %}
          'rust {{ rust_version }}': {
            {% if production_jenkins %}
            withCredentials([
              string(credentialsId: 'sccache-redis-endpoint', variable: 'SCCACHE_REDIS_ENDPOINT'),
              string(credentialsId: 'sccache-redis-password', variable: 'SCCACHE_REDIS_PASSWORD'),
            ]) {
            {% endif %}
              def target_dir="/tmp/${env.JOB_NAME}-${env.BUILD_ID}/target_{{ rust_version }}"
              sh """\
                set -e
                mkdir -p ${target_dir}
                export RUSTC_WRAPPER=sccache
                export CARGO_INCREMENTAL=0
                cargo +{{ rust_version }} clippy --target-dir ${target_dir} --all-features --locked -- --deny warnings
                RUSTDOCFLAGS="--deny warnings" cargo +{{ rust_version }} doc --target-dir ${target_dir} --all-features --locked --no-deps
                cargo +{{ rust_version }} test --target-dir ${target_dir} --all-features --locked
                """
            {% if production_jenkins %}
            }
            {% endif %}
          },
        {% endfor %}
      ])
    }
  }
}
