- job-group:
    name: swh-environment-jobs-{name}
    gitlab_project_name: swh/devel/swh-environment
    jobs:
      - "{name}"
      - "{name}/run-all-tests"
      - "{name}/docker-tests"

- job-template:
    name: "{name}/run-all-tests"
    display-name: tests
    description: Run tests for each swh module in development version
    node: swh-sphinx

    triggers: !j2-yaml: |
      {% if production_jenkins %}
      - timed: "H */6 * * *"
      {% else %}
      []
      {% endif %}

    scm:
      - git:
          url: "{gitlab_url}/{gitlab_project_name}.git"
          branches:
            - "*/master"
    wrappers:
      - timeout:
          timeout: 120
          abort: true
      - timestamps

    builders:
      - shell: |
          #!/bin/bash
          # Don't fetch potentially large branches, we only need master
          sed -i 's/git clone/git clone --single-branch/g' .mrconfig
          # fetch swh repositories
          mr -j 4 -t update
          # setup a virtualenv
          python3.10 -m venv .venv
          . .venv/bin/activate
          # upgrade pip as default installed version is too outdated to properly
          # install all swh dependencies
          pip install --upgrade pip
          # install dependencies
          ./bin/install
          cd swh-graph
          make java >/dev/null
          cd ../swh-web
          yarn install
          cd ..
          # execute tests in each swh module
          exit_code=0
          for module in $(./bin/ls-py-modules)
          do
              cd $module
              tests_dir=$(echo $module | sed 's/-/\//g')/tests
              if [ -d "$tests_dir" ]
              then
                # pipe checks and tests output to stdout and log file
                make check 2>&1 | tee ../$module.log
                tests_status=${{PIPESTATUS[0]}}
                make test 2>&1 | tee -a ../$module.log
                tests_status=$(($tests_status + ${{PIPESTATUS[0]}}))
                # remove log file if tests succeeded
                if [[ "$tests_status" == "0" ]]
                then
                  rm -f ../$module.log
                fi
                # script must be exited with error when a test suite failed
                exit_code=$(( tests_status > exit_code ? tests_status : exit_code ))
              fi
              cd ..
          done

          exit $exit_code

    publishers:
      - archive:
          artifacts: "*.log"
          allow-empty: true

- job-template:
    name: "{name}/docker-tests"
    gitlab_project_name: swh/devel/swh-environment
    gitlab_trigger: true
    description: "Build the swh/stack:latest image and run tests"
    project-type: pipeline
    docker_image: tox
    docker_options: -v /tmp:/tmp
    sandbox: true
    max_concurrent: 2
    properties:
      - build-discarder:
          days-to-keep: 20
      - gitlab:
          connection: "{gitlab_connection_name}"
    triggers:
      - gitlab:
          trigger-push: true
          trigger-merge-request: true
          trigger-open-merge-request-push: source
          trigger-note: true
          note-regex: "@jenkins.*retry.*build"
          wip-skip: false
          add-ci-message: true
          cancel-pending-builds-on-update: true
          # secret jenkins token is generated when executing tox
          secret-token: !include-raw: templates/jenkins-token

    dsl: !include-jinja2: templates/swh-docker-dev.groovy.j2

- project:
    name: DENV
    display-name: swh-environment
    jobs:
      - "swh-environment-jobs-{name}"
